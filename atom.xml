<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://pigeonstar.club</id>
    <title>Ace pigeon</title>
    <updated>2021-01-26T05:32:27.372Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://pigeonstar.club"/>
    <link rel="self" href="https://pigeonstar.club/atom.xml"/>
    <logo>https://pigeonstar.club/images/avatar.png</logo>
    <icon>https://pigeonstar.club/favicon.ico</icon>
    <rights>All rights reserved 2021, Ace pigeon</rights>
    <entry>
        <title type="html"><![CDATA[基金持仓成本价怎么变低？基金持仓成本价是什么意思]]></title>
        <id>https://pigeonstar.club/post/ji-jin-chi-cang-cheng-ben-jie-zen-me-bian-di-ji-jin-chi-cang-cheng-ben-jie-shi-shi-me-yi-si/</id>
        <link href="https://pigeonstar.club/post/ji-jin-chi-cang-cheng-ben-jie-zen-me-bian-di-ji-jin-chi-cang-cheng-ben-jie-shi-shi-me-yi-si/">
        </link>
        <updated>2021-01-26T04:41:20.000Z</updated>
        <content type="html"><![CDATA[<p>基金持仓成本的高低直接影响投资者的收益，投资者在购买基金之后，经常会碰到，其持仓成本与首次买入相比，降低了</p>
<h2 id="基金持仓成本价怎么算">基金持仓成本价怎么算</h2>
<p>基金持仓成本下降的原因主要如下：</p>
<h4 id="1-基金出现分拆的情况">1、基金出现分拆的情况</h4>
<p>投资者所购买的基金出现分拆的情况，即基金投资人资产总值不变的前提下，改变基金份额净值和基金总份额的对应关系，重新计算基金资产的一种方式，分拆之后基金份额增加，而单位份额的净值减少，因单位份额的净值减少，其基金持仓成本也会相应的下调。</p>
<h4 id="2-基金出现现金分红的情况">2、基金出现现金分红的情况</h4>
<p>基金现金分红是指基金公司将基金收益的一部分，以现金方式派发给基金投资者的一种分红方式，分红之后，投资者总资产不会改变，其基金净值会作出相应的下调，持仓成本跟随基金净值的下调而下调。</p>
<h4 id="3-投资者进行做t操作">3、投资者进行做T操作</h4>
<p>投资者在基金盈利的情况下进行做T操作，卖出一部分基金份额，卖出这部分基金获取的收益会平摊到剩余基金份额中，从而降低投资者的持仓成本。</p>
<p>比如，投资者在基金净值1元的时候，买入1000份基金，等到基金净值1.5元的时候，卖出基金500份，在不考虑手续费用的情况下，投资者获利250元，其持仓成本=(<em>1000×1-1.5×500)/500=0.5元。</em></p>
<h4 id="4-在基金走势下跌过程中进行补仓操作">4、在基金走势下跌过程中，进行补仓操作</h4>
<p>投资者在基金走势下跌过程中，进行补仓操作，随着基金持有份额的增加，会降低其持仓成本。</p>
<p>比如，投资者在基金净值1元时，买入1000份，等到基金净值为0.9元时，再买入1000份，则其持仓成本价=(1000×1+0.9×1000)/2000=0.95元。</p>
<p>END</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[常用指令]]></title>
        <id>https://pigeonstar.club/post/chang-yong-zhi-ling/</id>
        <link href="https://pigeonstar.club/post/chang-yong-zhi-ling/">
        </link>
        <updated>2020-07-08T02:19:13.000Z</updated>
        <content type="html"><![CDATA[<h2 id="查看磁盘情况">查看磁盘情况</h2>
<pre><code>df -h
</code></pre>
<h2 id="查看磁盘使用占比">查看磁盘使用占比</h2>
<pre><code>du -sh /*
</code></pre>
<h2 id="查看该目录下使用占比">查看该目录下使用占比</h2>
<pre><code>du -sh /####/*    (#号内替换成要查看的目录)
</code></pre>
<h3 id="end">End</h3>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[VPS服务器24小时Ping值延迟监测工具]]></title>
        <id>https://pigeonstar.club/post/24h/</id>
        <link href="https://pigeonstar.club/post/24h/">
        </link>
        <updated>2020-07-03T08:29:55.000Z</updated>
        <content type="html"><![CDATA[<h2 id="依赖安装">依赖安装</h2>
<p>Debian/Ubuntu</p>
<pre><code>apt-get update
apt-get install python wget screen -y
</code></pre>
<p>CentOS/RHEL</p>
<pre><code>yum install screen wget python -y
</code></pre>
<h2 id="使用方法">使用方法</h2>
<pre><code>screen -S uping
wget -N --no-check-certificate https://raw.githubusercontent.com/FunctionClub/uPing/master/uping.py

python uping.py
</code></pre>
<p>提示：第一次使用如果出现乱码，退出后重新输入python uping.py即可</p>
<h2 id="界面预览">界面预览</h2>
<figure data-type="image" tabindex="1"><img src="https://pigeonstar.club/post-images/1593765122100.jpg" alt="" loading="lazy"></figure>
<h2 id="操作说明">操作说明</h2>
<p><strong>退出界面：Ctrl + A + D<br>
进入界面：screen -r uping<br>
退出程序：Ctrl + C<br>
查看screen进程：screen -ls<br>
结束screen程序：exit</strong></p>
<h3 id="版权声明版权归-sunpma-所有转载请注明出处">版权声明：版权归 SunPma 所有，转载请注明出处！</h3>
<p><a href="https://sunpma.com/631.html" title="原创地址">原创地址</a><br>
<a href="https://github.com/FunctionClub/uPing" title="GitHub">GitHub</a></p>
<h3 id="end">End</h3>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[快速开启Google BBR的方法，实现高效单边加速]]></title>
        <id>https://pigeonstar.club/post/bbr/</id>
        <link href="https://pigeonstar.club/post/bbr/">
        </link>
        <updated>2020-07-03T05:41:31.000Z</updated>
        <content type="html"><![CDATA[<p>前言：本文适用于Debian，Ubuntu系统</p>
<h2 id="查看系统版本">查看系统版本</h2>
<pre><code>lsb_release -a
</code></pre>
<h2 id="修改系统变量">修改系统变量</h2>
<pre><code>echo &quot;net.core.default_qdisc=fq&quot; &gt;&gt; /etc/sysctl.conf
echo &quot;net.ipv4.tcp_congestion_control=bbr&quot; &gt;&gt; /etc/sysctl.conf
</code></pre>
<h2 id="保存生效">保存生效</h2>
<pre><code>sysctl -p
</code></pre>
<h2 id="查看内核是否已开启bbr">查看内核是否已开启BBR</h2>
<pre><code>sysctl net.ipv4.tcp_available_congestion_control
</code></pre>
<h2 id="显示以下即已开启">显示以下即已开启</h2>
<p><code>net.ipv4.tcp_available_congestion_control = reno cubic bbr</code></p>
<h2 id="查看bbr是否启动">查看BBR是否启动</h2>
<pre><code>lsmod | grep bbr
</code></pre>
<h2 id="显示以下即启动成功">显示以下即启动成功</h2>
<p><code>tcp_bbr 20480 14</code></p>
<h3 id="end">END</h3>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[傻白一键BBR/BBR Plus/魔改BBR/锐速（LotServer）四合一]]></title>
        <id>https://pigeonstar.club/post/yjjs/</id>
        <link href="https://pigeonstar.club/post/yjjs/">
        </link>
        <updated>2020-07-03T04:36:56.000Z</updated>
        <content type="html"><![CDATA[<h2 id="傻白一键bbrbbr-plus魔改bbr锐速旧版">傻白一键BBR/BBR Plus/魔改BBR/锐速（旧版）</h2>
<pre><code>wget &quot;https://github.com/cx9208/Linux-NetSpeed/raw/master/tcp.sh&quot; &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh
</code></pre>
<h2 id="傻白一键bbrbbr-plus魔改bbr锐速新版">傻白一键BBR/BBR Plus/魔改BBR/锐速（新版）</h2>
<pre><code>wget -N --no-check-certificate &quot;https://github.com/ylx2016/Linux-NetSpeed/releases/download/sh/tcp.sh&quot; &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh
</code></pre>
<h2 id="重新进入管理界面">重新进入管理界面</h2>
<pre><code>./tcp.sh
</code></pre>
<h2 id="脚本运行过程中如果出现如下提示用方向键选no回车">脚本运行过程中，如果出现如下提示，用方向键选No回车</h2>
<figure data-type="image" tabindex="1"><img src="https://pigeonstar.club/post-images/1593769343118.jpg" alt="" loading="lazy"></figure>
<h3 id="end">END</h3>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[卸载BBR多余内核]]></title>
        <id>https://pigeonstar.club/post/dynh/</id>
        <link href="https://pigeonstar.club/post/dynh/">
        </link>
        <updated>2020-07-01T05:52:27.000Z</updated>
        <content type="html"><![CDATA[<p>前言：请先关闭BBR，本文适用于Debian，Ubuntu系统</p>
<h2 id="列出所有内核">列出所有内核</h2>
<pre><code>dpkg -l|grep linux-image | awk '{print $2}'
</code></pre>
<figure data-type="image" tabindex="1"><img src="https://pigeonstar.club/post-images/1593766427959.jpg" alt="" loading="lazy"></figure>
<h2 id="卸载多余内核">卸载多余内核</h2>
<p>请不要删除所有内核，否则后果自负。</p>
<pre><code>apt-get purge 其余内核名称 -y
</code></pre>
<h2 id="更新grub">更新grub</h2>
<pre><code>update-grub
</code></pre>
<h2 id="重启系统">重启系统</h2>
<pre><code>reboot
</code></pre>
<h3 id="end">End</h3>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[解决VPS时间和本地时间不同]]></title>
        <id>https://pigeonstar.club/post/sjtb/</id>
        <link href="https://pigeonstar.club/post/sjtb/">
        </link>
        <updated>2020-07-01T04:13:27.000Z</updated>
        <content type="html"><![CDATA[<h2 id="设置时区为北京时间">设置时区为北京时间</h2>
<p>部分 VPS 的镜像都是默认的国外时区，使用起来不是很方便。可以把它修改成北京时间，就会方便很多。</p>
<pre><code>rm -rf /etc/localtime
ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
</code></pre>
<h2 id="ntp-同步时间-协议">NTP 同步时间 协议</h2>
<p>Ubuntu/Debian 系统</p>
<pre><code>apt-get update
apt-get install ntp ntpdate -y
</code></pre>
<p>CentOS/RHEL 系统</p>
<pre><code>yum install ntp ntpdate -y
</code></pre>
<p>接下来我们需要先停止 NTP 服务器，再更新时间。</p>
<pre><code>service ntpd stop                 #停止 ntp 服务
ntpdate us.pool.ntp.org           #同步 ntp 时间
service ntpd start                #启动 ntp 服务
</code></pre>
<p>执行完成后，VPS 上就是相对精确的时间设置了。很多依赖于系统时间的应用程序也就能正常工作了。</p>
<h2 id="查看所在时区">查看所在时区</h2>
<pre><code>date -R
</code></pre>
<p>得到</p>
<pre><code>Fri, 06 Mar 2020 14:37:56 +0800
</code></pre>
<p>确认一下时区和时间是否正确，无误即可。</p>
<p><a href="http://https://www.xiaoyu518.com/index.php/author/cxy870724/" title="原文地址：感谢cxy870724">原文地址：感谢cxy870724</a></p>
<h3 id="end">End</h3>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[傻白一键回程路由or测速]]></title>
        <id>https://pigeonstar.club/post/hccs/</id>
        <link href="https://pigeonstar.club/post/hccs/">
        </link>
        <updated>2020-07-01T03:48:25.000Z</updated>
        <content type="html"><![CDATA[<h2 id="vps回程路由测试">VPS回程路由测试</h2>
<pre><code>wget https://raw.githubusercontent.com/nanqinlang-script/testrace/master/testrace.sh

bash testrace.sh
</code></pre>
<h2 id="superspeedsh脚本">SuperSpeed.sh脚本</h2>
<pre><code>wget https://raw.githubusercontent.com/oooldking/script/master/superspeed.sh &amp;&amp; chmod +x superspeed.sh &amp;&amp; ./superspeed.sh
</code></pre>
<h2 id="服务器到国内的速度脚本superspeed加强版sh">服务器到国内的速度脚本Superspeed加强版.sh</h2>
<pre><code>wget https://raw.githubusercontent.com/oooldking/script/master/superspeed.sh
chmod +x superspeed.sh
./superspeed.sh
</code></pre>
<h2 id="benchsh强化版superbenchsh">bench.sh强化版：SuperBench.sh</h2>
<pre><code>wget -qO- https://raw.githubusercontent.com/oooldking/script/master/superbench.sh | bash
或者
curl -Lso- https://raw.githubusercontent.com/oooldking/script/master/superbench.sh | bash
</code></pre>
<h2 id="iperf3-测试本地到-vps-的连接速度">iperf3 测试本地到 VPS 的连接速度</h2>
<p>CentOS</p>
<pre><code>yum -y install iperf3
</code></pre>
<p>Debian/Ubuntu</p>
<pre><code>apt-get -y install iperf3
</code></pre>
<h2 id="iperf3-测速用法">iperf3 测速用法</h2>
<p>先在 VPS 上运行 iperf3 进程。其中 -s 参数表示服务器端，-p 指定使用端口（默认端口 5201，别忘了防火墙放行端口），如果需要以守护进程后台运行，追加 -D 参数。</p>
<pre><code>iperf3 -s -p 5201
</code></pre>
<p>然后在本机发起测速。其中 -c 参数表示客户端并指定测速服务器地址，-p 指定服务器端口，-t 指定测试时长（单位秒），-P 指定并发连接数（越高越能测试到速度极限），-R 表示下载测速（不加参数则测试上传速度），如果要测试 UDP 连接，追加 -u 参数。<br>
<a href="http://software.es.net/iperf/invoking.html#iperf3-manual-page" title="点此查看完整参数">点此查看完整参数</a></p>
<pre><code>iperf3 -c x.x.x.x -p 5201 -t 60 -P 10 -R
</code></pre>
<h2 id="vps性能综合跑分工具unixbench">VPS性能综合跑分工具：unixbench</h2>
<pre><code>wget --no-check-certificate https://github.com/teddysun/across/raw/master/unixbench.sh
chmod +x unixbench.sh
./unixbench.sh
</code></pre>
<h2 id="zbench">ZBench</h2>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/FunctionClub/ZBench/master/ZBench-CN.sh &amp;&amp; bash ZBench-CN.sh
</code></pre>
<h3 id="end">End</h3>
]]></content>
    </entry>
</feed>